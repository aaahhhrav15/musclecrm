pipeline {
  agent any

  environment {
    AWS_ACCESS_KEY_ID = credentials('aws-access-key')       // Replace with your Jenkins secret ID
    AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key')   // Replace with your Jenkins secret ID
    CLOUDFRONT_DISTRIBUTION_ID = 'E21O8U7YKLATRS'        // Replace with actual distribution ID
  }

  stages {
    stage('Clean Workspace') {
      steps {
        cleanWs()
      }
    }

    stage('Checkout Code') {
      steps {
        echo 'üì¶ Checking out code...'
        checkout scm
      }
    }

    stage('Install Dependencies') {
      tools {
        nodejs "Node18"  // Defined in Jenkins global tool config
      }
      steps {
        dir('client') {
          echo "üì• Installing frontend dependencies..."
          sh '''
            node -v
            npm -v
            npm config set registry https://registry.npmmirror.com
            npm install --verbose
          '''
        }
      }
    }

    stage('Build React App') {
      steps {
        dir('client') {
          echo 'üîß Building React app...'
          sh 'npm run build'
        }
      }
    }

    stage('Deploy to S3') {
      steps {
        withEnv(["PATH+AWS=/usr/local/bin"]) { // Add AWS CLI path if needed
          echo 'üöÄ Deploying to S3...'
          dir('client') {
            sh 'aws s3 sync build/ s3://musclecrm-frontend --delete'
          }
        }
      }
    }

    stage('Invalidate CloudFront') {
      steps {
        echo 'üßπ Invalidating CloudFront cache...'
        sh '''
          aws cloudfront create-invalidation \
          --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
          --paths "/*"
        '''
      }
    }
  }

  post {
    success {
      echo '‚úÖ Deployment completed successfully!'
    }
    failure {
      echo '‚ùå Deployment failed. Please check logs.'
    }
  }
}
